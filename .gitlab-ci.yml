image: registry.gitlab.com/aleksandr-kotlyar/python_and_gitlab:python-3.7.6-slim-buster-chrome-java-13.0.2-allurecli

stages:
  - code_style
  - dev
  - test
  - generate-reports
  - slack-notification
  - upload-allure-reports

variables:
  ENVIRONMENT: 'dev'
  ## suits
  TEST_SCOPE: src/test
  ## Allure
  ALLURE_DIR: $CI_JOB_ID
  ALLURE_REPORT_PATH: $CI_PROJECT_NAME!$ENVIRONMENT!$CI_COMMIT_REF_NAME!$CI_JOB_ID
  ## Slack
  SLACK_TEXT_START: 'Pipeline <$CI_PIPELINE_URL|$CI_PIPELINE_ID> _has started_  *$CI_PIPELINE_SOURCE* job <$CI_JOB_URL|$CI_JOB_ID> on *$ENVIRONMENT* _at branch <$CI_PROJECT_URL/commit/$CI_COMMIT_SHA|$CI_COMMIT_REF_NAME>_'
  SLACK_TEXT_FINISH: 'Pipeline <$CI_PIPELINE_URL|$CI_PIPELINE_ID> _has finished_ *$CI_PIPELINE_SOURCE* job $CI_JOB_ID on *$ENVIRONMENT* _and generated_ *<$ALLURE_REPORTS_STORAGE/$CI_PROJECT_NAME/$ENVIRONMENT/$CI_COMMIT_REF_NAME/$CI_JOB_ID|Allure Reports>*'

.linter_template:
  image: registry.gitlab.com/aleksandr-kotlyar/python_and_gitlab:python-3.7.6-slim-buster
  stage: code_style
  only:
    refs:
      - pushes
  except:
    refs:
      - web
      - triggers
      - schedules
  tags:
    - gitlab-org

Pylint:
  allow_failure: true
  extends: .linter_template
  script:
    - mkdir ./pylint
    - >
      touch __init__.py;
      pylint --rcfile=pylintrc $PWD | tee ./pylint/pylint.log || pylint-exit $?;
      rm __init__.py

.job_template:
  allow_failure: true
  before_script:
    - echo $HOME
    - pwd
    - ls /builds -la
    - ls -la
    - ls /root -la
    - whoami
    - echo $PATH
    #    - su - apps
    #    - whoami
    #    - su - apps -c whoami
    #    - echo ${CI_BUILDS_DIR}
    #    - echo ${CI_PROJECT_NAME}
    #    - echo ${CI_PROJECT_NAMESPACE}
    - google-chrome --version
  script:
    - pytest ${TEST_SCOPE}
  only:
    variables:
      - $ENVIRONMENT == $CI_JOB_STAGE
  artifacts:
    when: always
    paths:
      - reports
  tags:
    - gitlab-org

allure-reports:
  allow_failure: true
  stage: generate-reports
  script:
    - allure generate reports
    - ls -la
  artifacts:
    when: always
    paths:
      - allure-report

pages:
  image: registry.gitlab.com/aleksandr-kotlyar/python_and_gitlab:python-3.7.6-slim-buster
  stage: upload-allure-reports
  allow_failure: true
  before_script:
    - dt=$(date +%F)
    - allure_path=${CI_COMMIT_REF_NAME}/${dt}_${CI_PIPELINE_ID}
    - mkdir ${CI_COMMIT_REF_NAME}
    - mkdir ${allure_path}
  script:
    - mv allure-report /public/${allure_path}
  artifacts:
    paths:
      - public

  # .job_allure_reports_upload_template:
  ## JOB TEMPLATES WITH NO_SLACK_ AND SLACK_ NOTIFICATIONS
  # extends: .job_template
  # stage: upload-allure-reports
  # after_script:
  # - tar czf "$ALLURE_REPORT_PATH.tgz" reports
  # - curl -i -F "data=@$ALLURE_REPORT_PATH.tgz" $ALLURE_REPORTS_STORAGE/upload

  # .job_slack_custom_notification_template:
  ## Start and Stop notification to Slack of test execution status on ENVIRONMENT
  # extends: .job_template
  # stage: slack-notification
  # before_script:
  # - curl --request POST --data-urlencode "payload={\"channel\":\"$SLACK_CHANNEL\",\"username\":\"$SLACK_USER\",\"text\":\"$SLACK_TEXT_START\", \"icon_emoji\":\":gitlab:\"}" https://hooks.slack.com/services/$SLACK_TOKEN
  # after_script:
  # - curl  --request POST --data-urlencode "payload={\"channel\":\"$SLACK_CHANNEL\",\"username\":\"$SLACK_USER\",\"text\":\"$SLACK_TEXT_FINISH\", \"icon_emoji\":\":gitlab:\"}" https://hooks.slack.com/services/$SLACK_TOKEN

.job_push_template:
  ## JOBS ON PUSH
  extends: .job_template
  when: manual
  only:
    refs:
      ## Pipeline is triggered by a git push by the user
      - pushes

push_dev:
  extends: .job_push_template
  stage: dev
  variables:
    ENVIRONMENT: 'dev'
  except:
    - master

.job_web_ui:
  ## JOBS ON WEB UI: dev, preprod
  extends: .job_template
  only:
    refs:
      ## For pipelines created using Run pipeline button in GitLab UI (under your projectâ€™s Pipelines)
      - web

manual_dev:
  extends: .job_web_ui
  stage: dev
  variables:
    ENVIRONMENT: 'dev'

manual_preprod:
  extends: .job_web_ui
  stage: test
  variables:
    ENVIRONMENT: 'preprod'

.job_schedule_template:
  ## JOBS ON SCHEDULE: dev, preprod
  extends: .job_template
  only:
    refs:
      ## For scheduled pipelines.
      - schedules

schedule_dev:
  extends: .job_schedule_template
  stage: dev
  variables:
    ENVIRONMENT: 'dev'

schedule_preprod:
  extends: .job_schedule_template
  stage: test
  variables:
    ENVIRONMENT: 'preprod'

.job_merges_template:
  ## JOBS ON MERGE_REQUESTS: dev, preprod
  extends: .job_push_template
  only:
    refs:
      - master
      - merge_requests


e2e:chrome:
  extends: .job_template
  variables:
    TEST_SCOPE: src/test/ctc
  stage: dev
